// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InGenR Complains about missing generators 1`] = `
Array [
  Object {
    "filePath": "<project-root>/src/erroneous-template-name.ts",
    "line": undefined,
    "lineIndex": undefined,
    "warnings": Array [
      Object {
        "message": "Invalid template name: knex/../../../foo-bar",
      },
    ],
  },
  Object {
    "filePath": "<project-root>/src/missing-generator.ts",
    "line": undefined,
    "lineIndex": undefined,
    "warnings": Array [
      Object {
        "message": "Failed to resolve generator: knex-dahl",
      },
    ],
  },
]
`;

exports[`InGenR Complains about missing generators 2`] = `
"import foo from \\"foo\\"

const bar = \\"bar\\"

/*! InGenR:expand knex-dal
 * ---
 * tableName: users
 * columns:
 *   - name: name
 *     type: string
 *   - name: email
 *     type: string
 */
interface users {
  name: string;
  email: string;
  
}

const createTable = () =>
  knex.schema.createTable(\\"users\\", (table) => {
      table.uuid(\\"id\\").primary();
      table.string(\\"name\\")
      table.string(\\"email\\")
      
  })
/*! InGenR:end */

export { foo, bar }
"
`;

exports[`InGenR Injects generated content into annotated blocks 1`] = `
"import foo from \\"foo\\"

const bar = \\"bar\\"

/*! InGenR:expand knex-dal
 * ---
 * tableName: users
 * columns:
 *   - name: name
 *     type: string
 *   - name: email
 *     type: string
 */
interface users {
  name: string;
  email: string;
  
}

const createTable = () =>
  knex.schema.createTable(\\"users\\", (table) => {
      table.uuid(\\"id\\").primary();
      table.string(\\"name\\")
      table.string(\\"email\\")
      
  })
/*! InGenR:end */

export { foo, bar }
"
`;

exports[`InGenR supports external template targets 1`] = `
"import foo from \\"foo\\"

const bar = \\"bar\\"

/*! InGenR:expand knex-dal
 * ---
 * tableName: users
 * columns:
 *   - name: name
 *     type: string
 *   - name: email
 *     type: string
 */
interface users {
  name: string;
  email: string;
  
}

const createTable = () =>
  knex.schema.createTable(\\"users\\", (table) => {
      table.uuid(\\"id\\").primary();
      table.string(\\"name\\")
      table.string(\\"email\\")
      
  })
/*! InGenR:end */

export { foo, bar }
"
`;

exports[`InGenR supports external template targets 2`] = `
"import foo from \\"foo\\"

const bar = \\"bar\\"

/*! InGenR:expand knex-dal
 *
 * targetFilePath: users-table.ts
 * ---
 * tableName: users
 * columns:
 *   - name: name
 *     type: string
 *   - name: email
 *     type: string
 */
/*! InGenR:end */

export { foo, bar }
"
`;

exports[`InGenR supports external template targets 3`] = `
"interface users {
  name: string;
  email: string;
  
}

const createTable = () =>
  knex.schema.createTable(\\"users\\", (table) => {
      table.uuid(\\"id\\").primary();
      table.string(\\"name\\")
      table.string(\\"email\\")
      
  })
"
`;

exports[`InGenR supports multiple targets and generator modules 1`] = `
"import foo from \\"foo\\"

const bar = \\"bar\\"

/*! InGenR:expand pg-dal,sqlite-dal
 * ---
 * tableName: users
 * columns:
 *   - name: name
 *     type: string
 *   - name: email
 *     type: string
 */
hello world
lorem ipsum
/*! InGenR:end */

export { foo, bar }
"
`;

exports[`InGenR supports multiple targets and generator modules 2`] = `Array []`;
